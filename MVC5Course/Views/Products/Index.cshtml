@model IEnumerable<MVC5Course.Models.Product>

@{
    ViewBag.Title = "Index";
}
@{ 
    HtmlString a = Html.ActionLink("▲", "Index", "Products",new {sort="+",searchText=ViewBag.searchKey },new { });
    HtmlString b = Html.ActionLink("▼","Index", "Products", new { sort = "-", searchText = ViewBag.searchKey }, new { });
}
<h2>Index</h2>
<div>
    <form>
        @Html.TextBox("searchText")
        <input type="submit" value="search" />
    </form>
</div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using PagedList
@using PagedList.Mvc
@Html.PagedListPager(Model as IPagedList,
(p) => Url.Action("Index", new { pageNo = p, searchText = ViewBag.searchKey, sort = ViewBag.sort })
)

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            @a
            @Html.DisplayNameFor(model => model.Price)
            @b
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Active)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Stock)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ProductId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ProductId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ProductId })
        </td>
    </tr>
}

</table>

